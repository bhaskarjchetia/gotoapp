<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recordings</title>
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <div class="container">
        <header>
            <h1>Recordings</h1>
        </header>
        <main>
            <section>
                <div class="dashboard-header">
                    <h2>Recordings for Account: <%= accountId %></h2>
                    <div class="dashboard-actions">
                        <a href="/dashboard" class="btn btn-primary">Back to Dashboard</a>
                    </div>
                </div>
                <div class="table-container">
                    <table>
                        <thead>
                            <tr>
                                <th>Recording ID</th>
                                <th>Start Timestamp</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (recordings.length === 0) { %>
                                <tr>
                                    <td colspan="3">No recordings found for this account.</td>
                                </tr>
                            <% } else { %>
                                <% recordings.forEach(recording => {
                                %>
                                <tr>
                                    <td><%= recording.recording_id %></td>
                                    <td><%= recording.start_timestamp %></td>
                                    <td class="recordings-table-actions">
                                        <% if (!recording.content_url) { %>
                                        <button onclick="fetchRecordingContent('<%= accountId %>', '<%= recording.recording_id %>')">Fetch Recording Content</button>
                                        <% } else if (recording.content_url) { %>
                                            <audio controls>
                                                <source src="<%= recording.content_url %>" type="audio/mpeg">
                                                Your browser does not support the audio element.
                                            </audio>
                                        <% } else { %>
                                            <a href="<%= recording.content_url %>" target="_blank">Listen Recording</a>
                                        <% } %>
                                    </td>
                                </tr>
                                <% }); %>
                            <% } %>
                        </tbody>
                    </table>
                </div>
                <div class="button-group" style="margin-top: 20px;">
                    <a href="/dashboard"><button>Back to Dashboard</button></a>
                    <button onclick="fetchRecordings('<%= accountId %>')">Fetch Recordings</button>
                </div>
            </section>

            <div id="loader" style="display: none;">
                <img src="/public/images/spinner.svg" alt="Loading...">
                <p>Loading...</p>
            </div>
        </main>
      </div>

      <script>
        function showLoader() {
            document.getElementById('loader').style.display = 'flex';
        }

        function hideLoader() {
            document.getElementById('loader').style.display = 'none';
        }

        // Show loader when the page starts loading
        document.addEventListener('DOMContentLoaded', showLoader);

        // Hide loader when the page finishes loading
        window.addEventListener('load', hideLoader);

        // Example of how you might use it for AJAX calls or other dynamic content loading
        // For instance, if you have a button that triggers data loading:
        // document.getElementById('myButton').addEventListener('click', function() {
        //     showLoader();
        //     // Simulate data loading
        //     setTimeout(hideLoader, 2000);
        // });
      </script>
    <script>
        async function fetchRecordings(accountId) {
            showLoader(); // Show loader when fetch starts
            try {
                const response = await fetch(`/fetch-recordings/${accountId}`);
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to fetch recordings');
                }
                alert('Recordings fetched successfully! Please refresh the page.');
                window.location.reload(); // Reload to display new recordings
            } catch (error) {
                console.error('Error fetching recordings:', error);
                alert(`An error occurred while fetching recordings: ${error.message}`);
            } finally {
                hideLoader(); // Hide loader when fetch completes (success or error)
            }
        }

        async function fetchRecordingContent(accountId, recordingId) {
            try {
                const response = await fetch(`/recording/${accountId}/${recordingId}`);
                if (response.ok) {
                    const data = await response.json();
                    alert('Recording content fetched successfully! Check console for details.');
                    console.log('Recording Content:', data);
                    // You can add logic here to display the recording content, e.g., play it in an audio/video player
                } else {
                    const errorData = await response.json();
                    alert(`Failed to fetch recording content: ${errorData.message}`);
                }
            } catch (error) {
                console.error('Error fetching recording content:', error);
                alert('An error occurred while fetching recording content.');
            }
        }

        async function fetchTranscriptionContent(accountId, recordingId) {
            try {
                const response = await fetch(`/transcript/${accountId}/${recordingId}`);
                if (response.ok) {
                    const data = await response.json();
                    alert('Transcription content fetched successfully! Check console for details.');
                    console.log('Transcription Content:', data);
                    // You can add logic here to display the transcription content
                } else {
                    const errorData = await response.json();
                    alert(`Failed to fetch transcription content: ${errorData.message}`);
                }
            } catch (error) {
                console.error('Error fetching transcription content:', error);
                alert('An error occurred while fetching transcription content.');
            }
        }
    </script>
</body>
</html>